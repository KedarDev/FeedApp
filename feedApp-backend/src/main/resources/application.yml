
# Logger 
logging.level:
  web: DEBUG
  '[com.bptn.feedapp]' : DEBUG
  
  
# Active Profile / defualt config
spring:
  profiles:
    active: default
    
# Banner Text
  banner:
    charset: UTF-8
    location: classpath:/banner/academy.txt
    
# Date format config settings Used by the controller     
# Jackson Settings
  jackson:
    time-zone: America/Toronto
    date-format: "yyyy-MM-dd HH:mm:ss" 
    
    # Email Settings
  mail:
    username: kedar.h.dev@gmail.com
    password: eisw xols qekn jvld
    host: smtp.gmail.com
    port: 587
    protocol: smtp
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
    
# Common Database Settings
  sql:
    init:
      continue-on-error: false
#  Tells Spring to abort starting the application if any of our database configurations fails. 
  jpa:
    show-sql: true
    open-in-view: false
#  - Tells Hibernate* to print out the SQL statements generated in the console
    properties:  
      jakarta:
        persistence:
          sharedCache:
            mode: ENABLE_SELECTIVE
# Tells JPA that we will manually specify which JPA Entities will be second-level cached.
      hibernate:
        '[format_sql]': true        
# Tells Hibernate to format the SQL statements it generates before printing them out
    hibernate:
      naming.physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
# Allows Hibernate to use camelCase to access the database table names.
---

# ==>SPRING JDBC CONFIGURATION<==

# Always active
# Default Profile
spring:
  config:
    activate:
      on-profile: default 
       
# Database Settings
  datasource: 
    url: jdbc:postgresql://localhost:5432/FeedApp #  Database URL
    username: postgres # Database username
    password:  # Database password
    hikari: # Spring uses hikari for a connection pool to the DB
      maximum-pool-size: 2
  jpa: # Tells Hibernate to validate the JPA Entities versus the database tables. Throws an Exception if the validation fails.
    hibernate:
      ddl-auto: validate    
      
      
---      
# Prod Profile
server:
  port: 8081
  
spring:
  config:
    activate:
      on-profile: prod  
  
# Database Settings 
  datasource:
    url: jdbc:postgresql://localhost:5432/FeedApp
    username: postgres
    password: 
    hikari:
      maximum-pool-size: 2
  jpa:
    hibernate:
      ddl-auto: validate
      
      
---
---
# Test Profile
    
spring:
  config:
    activate:
      on-profile: test  
  
# Database Settings
  sql:
    init:
      mode: always
  datasource:
    url: jdbc:h2:mem:testdb
    username: sa
    password: password
    driverClassName: org.h2.Driver
  jpa:
    hibernate:
      ddl-auto: create-drop
    database-platform: org.hibernate.dialect.H2Dialect